@import '../../../style/Variables';

$circleSize: 80px;
$borderWidth: 4px;
$linkWidth: 60px;
$linkSize: 10px;
$marginBetweenStep: 25px;

.roadmap {
  position: relative;
  overflow: hidden;

  .item {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: flex-start;

    .node {
      z-index: 1;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;

      div {
        width: $circleSize;
        height: $circleSize;
        min-height: $circleSize;
        line-height: $circleSize;
        border-radius: 100%;
        background-color: darken($mainColor, 5%);
        text-align: center;
        font-size: 1.2em;
        color: white;
      }

      @media screen and (max-width: 992px) {
        justify-content: flex-end;
      }
    }

    .step-wrapper {
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;

      .step-overflow {
        flex-grow: 0;
        flex-shrink: 0;
        width: calc(50% + #{$linkSize / 2});
        height: calc(100% + #{$circleSize / 2});
        padding-bottom: $circleSize / 2;
        margin-bottom: -$circleSize / 2;
        overflow: hidden;

        .step {
          position: relative;
          width: calc(100% - #{($linkSize / 2) + ($circleSize / 2) + $linkWidth});
          margin-bottom: $marginBetweenStep;
          padding: 20px 10px;
          background-color: white;
          border-radius: 5px;
          border: $borderWidth solid $mainColor;
          box-sizing: border-box;
          color: $textColor;
          opacity: 1;
          transition: opacity 1s;

          &:before {
            z-index: -1;
            content: '';
            position: absolute;
            top: -$borderWidth + (($circleSize - $linkSize) / 2);
            left: calc(100% + #{$borderWidth});
            height: 10px;
            width: $linkWidth + ($circleSize / 2) - ($linkSize / 2);
            background: $mainColor;
            transform-origin: left center;
            transform: scale(1);
            transition: transform 0.5s ease;
          }

          .step-date {
            text-align: center;
            font-family: Poppins, sans-serif;
            font-size: 1.3em;
            font-weight: 400;
            color: $textColorDarken;
          }

          ul {
            padding: 15px 40px 0;
            list-style: circle;
            color: $textColor;

            li {
              padding: 5px 0;
              line-height: 1.2em;
              font-size: 1.1em;
            }
          }

          &:not(.visible) {
            opacity: 0;

            &:before {
              transform: scale(0, 1);
            }
          }
        }

        @media screen and (min-width: 993px) {
          &.right {
            align-self: flex-end;

            .step {
              left: ($linkSize / 2) + ($circleSize / 2) + $linkWidth;

              &:before {
                left: unset;
                right: calc(100% + #{$borderWidth});
                transform-origin: right center;
              }
            }
          }
        }

        @media screen and (max-width: 992px) {
          width: calc(100% + #{($linkSize / 2) - ($circleSize / 2)});

          .step {
            width: calc(100% - #{($linkSize / 2) + ($circleSize / 2) + ($linkWidth / 2)});

            &:before {
              width: ($linkWidth / 2) + ($circleSize / 2) - ($linkSize / 2);
            }
          }
        }
      }
    }

    &:last-of-type .step-wrapper:last-of-type .step {
      margin-bottom: 0;

      &:after {
        content: none;
      }
    }
  }

  &:before {
    content: '';
    z-index: -1;
    position: absolute;
    top: 0;
    left: calc((100% - #{$linkSize}) / 2);
    width: $linkSize;
    height: 100%;
    background: $mainColor;
    opacity: 0.5;
  }

  .marker {
    z-index: -1;
    position: absolute;
    top: 0;
    left: calc((100% - #{$linkSize}) / 2);
    width: $linkSize;
    height: 100%;
    background: $mainColor;
    transform: translateY(-100%);
    transition: transform 0.3s;

    &:after {
      content: '';
      z-index: -1;
      position: absolute;
      top: 100%;
      left: 0;
      width: $linkSize;
      height: 80px;
      background: linear-gradient(0deg, transparent 0%, $mainColor 50%);
    }
  }

  @media screen and (max-width: 992px) {
    &:before, .marker {
      left: calc(100% - #{($circleSize + $linkSize) / 2});
    }
  }
}